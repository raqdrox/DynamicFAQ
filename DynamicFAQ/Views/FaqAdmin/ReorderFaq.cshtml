@model Section

@{
    ViewData["Title"] = "ReorderFaq";
}

<h2>ReorderFaq</h2>

<head>


</head>
<body>
<script src="jqsl/jquery-sortable-lists.min.js"></script>
<hr/>

<div class="row">
    <div class="col-md-4">
        <form asp-action="ReorderFaq">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id"/>
            <ul class="sortableLists" id="sortList">
                @for (var i = 0; i < Model.Data.Count; i++)
                {
                    <li>
                        <div id="item-@i" data-id="@Model.Data[i].Id" class="list-group-item nested-1">@Model.Data[i].Question</div>
                    </li>
                }
            </ul>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </form>
    </div>
</div>

<div>
    <!--<a asp-action="Index">Back to List</a>-->
</div>
<script type="text/javascript">

    var qaArray = @Html.Raw(Json.Serialize(Model.Data));

    $(document).ready(function() {
        var options = {
            complete: function(currEl) {
                console.log($('#sortList').sortableListsToArray());
            },
            listSelector: 'ul',
            listsClass: 'sortableLists',
            // or like a jQuery css object
            listsCss: { 'background-color': 'silver', 'border': '1px solid white' }
        };
        $("#sortList").sortableLists(options);
    });
</script>
<style>
    #s-l-base li {
        background-color: #808080;
        padding-left: 50px;
    }

    .ghost { opacity: 0.4; }

    .list-group { margin: 20px; }

    .sortableLists { }
</style>
</body>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}